version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: sajuna-blog-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: sajuna_blog
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./configs/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - sajuna-blog-network
    # 安全配置
    user: "999:999"  # 非root用户
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/mysqld
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  redis:
    image: redis:7-alpine
    container_name: sajuna-blog-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_prod_data:/data
    networks:
      - sajuna-blog-network
    # 安全配置
    user: "999:999"  # 非root用户
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  backend:
    build: ./backend
    container_name: sajuna-blog-backend-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=sajuna_blog
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - GIN_TRUSTED_PROXIES=172.18.0.0/16
      - JWT_SECRET=${JWT_SECRET}
      - GIN_MODE=release
    depends_on:
      - mysql
      - redis
    networks:
      - sajuna-blog-network
    # 安全配置
    user: "1000:1000"  # 非root用户
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  frontend:
    build: ./frontend
    container_name: sajuna-blog-frontend-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - sajuna-blog-network
    # 安全配置
    user: "1000:1000"  # 非root用户
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  nginx:
    image: nginx:alpine
    container_name: sajuna-blog-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx-prod.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl  # SSL证书目录
    depends_on:
      - frontend
      - backend
    networks:
      - sajuna-blog-network
    # 安全配置
    user: "101:101"  # nginx用户
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
      - /tmp
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

volumes:
  mysql_prod_data:
  redis_prod_data:

networks:
  sajuna-blog-network:
    driver: bridge
